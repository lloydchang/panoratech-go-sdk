// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/panoratech/go-sdk/models/components"
)

type CreateAccountingJournalEntryRequest struct {
	// The connection token
	XConnectionToken string `header:"style=simple,explode=false,name=x-connection-token"`
	// Set to true to include data from the original Accounting software.
	RemoteData                         *bool                                         `queryParam:"style=form,explode=true,name=remote_data"`
	UnifiedAccountingJournalentryInput components.UnifiedAccountingJournalentryInput `request:"mediaType=application/json"`
}

func (o *CreateAccountingJournalEntryRequest) GetXConnectionToken() string {
	if o == nil {
		return ""
	}
	return o.XConnectionToken
}

func (o *CreateAccountingJournalEntryRequest) GetRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *CreateAccountingJournalEntryRequest) GetUnifiedAccountingJournalentryInput() components.UnifiedAccountingJournalentryInput {
	if o == nil {
		return components.UnifiedAccountingJournalentryInput{}
	}
	return o.UnifiedAccountingJournalentryInput
}

type CreateAccountingJournalEntryResponse struct {
	HTTPMeta                            components.HTTPMetadata `json:"-"`
	UnifiedAccountingJournalentryOutput *components.UnifiedAccountingJournalentryOutput
}

func (o *CreateAccountingJournalEntryResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateAccountingJournalEntryResponse) GetUnifiedAccountingJournalentryOutput() *components.UnifiedAccountingJournalentryOutput {
	if o == nil {
		return nil
	}
	return o.UnifiedAccountingJournalentryOutput
}
