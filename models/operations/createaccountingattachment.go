// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/panoratech/go-sdk/models/components"
)

type CreateAccountingAttachmentRequest struct {
	// The connection token
	XConnectionToken string `header:"style=simple,explode=false,name=x-connection-token"`
	// Set to true to include data from the original Accounting software.
	RemoteData                       *bool                                       `queryParam:"style=form,explode=true,name=remote_data"`
	UnifiedAccountingAttachmentInput components.UnifiedAccountingAttachmentInput `request:"mediaType=application/json"`
}

func (o *CreateAccountingAttachmentRequest) GetXConnectionToken() string {
	if o == nil {
		return ""
	}
	return o.XConnectionToken
}

func (o *CreateAccountingAttachmentRequest) GetRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *CreateAccountingAttachmentRequest) GetUnifiedAccountingAttachmentInput() components.UnifiedAccountingAttachmentInput {
	if o == nil {
		return components.UnifiedAccountingAttachmentInput{}
	}
	return o.UnifiedAccountingAttachmentInput
}

type CreateAccountingAttachmentResponse struct {
	HTTPMeta                          components.HTTPMetadata `json:"-"`
	UnifiedAccountingAttachmentOutput *components.UnifiedAccountingAttachmentOutput
}

func (o *CreateAccountingAttachmentResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateAccountingAttachmentResponse) GetUnifiedAccountingAttachmentOutput() *components.UnifiedAccountingAttachmentOutput {
	if o == nil {
		return nil
	}
	return o.UnifiedAccountingAttachmentOutput
}
