// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/panoratech/go-sdk/models/components"
)

type CreateHrisTimeoffRequest struct {
	// The connection token
	XConnectionToken string `header:"style=simple,explode=false,name=x-connection-token"`
	// Set to true to include data from the original Hris software.
	RemoteData              *bool                              `queryParam:"style=form,explode=true,name=remote_data"`
	UnifiedHrisTimeoffInput components.UnifiedHrisTimeoffInput `request:"mediaType=application/json"`
}

func (o *CreateHrisTimeoffRequest) GetXConnectionToken() string {
	if o == nil {
		return ""
	}
	return o.XConnectionToken
}

func (o *CreateHrisTimeoffRequest) GetRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *CreateHrisTimeoffRequest) GetUnifiedHrisTimeoffInput() components.UnifiedHrisTimeoffInput {
	if o == nil {
		return components.UnifiedHrisTimeoffInput{}
	}
	return o.UnifiedHrisTimeoffInput
}

type CreateHrisTimeoffResponse struct {
	HTTPMeta                 components.HTTPMetadata `json:"-"`
	UnifiedHrisTimeoffOutput *components.UnifiedHrisTimeoffOutput
}

func (o *CreateHrisTimeoffResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateHrisTimeoffResponse) GetUnifiedHrisTimeoffOutput() *components.UnifiedHrisTimeoffOutput {
	if o == nil {
		return nil
	}
	return o.UnifiedHrisTimeoffOutput
}
