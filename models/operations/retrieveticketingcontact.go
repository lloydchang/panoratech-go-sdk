// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/panoratech/go-sdk/models/components"
)

type RetrieveTicketingContactRequest struct {
	// The connection token
	XConnectionToken string `header:"style=simple,explode=false,name=x-connection-token"`
	// id of the contact you want to retrieve.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Set to true to include data from the original Ticketing software.
	RemoteData *bool `queryParam:"style=form,explode=true,name=remote_data"`
}

func (o *RetrieveTicketingContactRequest) GetXConnectionToken() string {
	if o == nil {
		return ""
	}
	return o.XConnectionToken
}

func (o *RetrieveTicketingContactRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *RetrieveTicketingContactRequest) GetRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

type RetrieveTicketingContactResponseBody struct {
	PrevCursor string                                     `json:"prev_cursor"`
	NextCursor string                                     `json:"next_cursor"`
	Data       []components.UnifiedTicketingContactOutput `json:"data"`
}

func (o *RetrieveTicketingContactResponseBody) GetPrevCursor() string {
	if o == nil {
		return ""
	}
	return o.PrevCursor
}

func (o *RetrieveTicketingContactResponseBody) GetNextCursor() string {
	if o == nil {
		return ""
	}
	return o.NextCursor
}

func (o *RetrieveTicketingContactResponseBody) GetData() []components.UnifiedTicketingContactOutput {
	if o == nil {
		return []components.UnifiedTicketingContactOutput{}
	}
	return o.Data
}

type RetrieveTicketingContactResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Object   *RetrieveTicketingContactResponseBody
}

func (o *RetrieveTicketingContactResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RetrieveTicketingContactResponse) GetObject() *RetrieveTicketingContactResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
