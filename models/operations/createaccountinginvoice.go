// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/panoratech/go-sdk/models/components"
)

type CreateAccountingInvoiceRequest struct {
	// The connection token
	XConnectionToken string `header:"style=simple,explode=false,name=x-connection-token"`
	// Set to true to include data from the original Accounting software.
	RemoteData                    *bool                                    `queryParam:"style=form,explode=true,name=remote_data"`
	UnifiedAccountingInvoiceInput components.UnifiedAccountingInvoiceInput `request:"mediaType=application/json"`
}

func (o *CreateAccountingInvoiceRequest) GetXConnectionToken() string {
	if o == nil {
		return ""
	}
	return o.XConnectionToken
}

func (o *CreateAccountingInvoiceRequest) GetRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *CreateAccountingInvoiceRequest) GetUnifiedAccountingInvoiceInput() components.UnifiedAccountingInvoiceInput {
	if o == nil {
		return components.UnifiedAccountingInvoiceInput{}
	}
	return o.UnifiedAccountingInvoiceInput
}

type CreateAccountingInvoiceResponse struct {
	HTTPMeta                       components.HTTPMetadata `json:"-"`
	UnifiedAccountingInvoiceOutput *components.UnifiedAccountingInvoiceOutput
}

func (o *CreateAccountingInvoiceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateAccountingInvoiceResponse) GetUnifiedAccountingInvoiceOutput() *components.UnifiedAccountingInvoiceOutput {
	if o == nil {
		return nil
	}
	return o.UnifiedAccountingInvoiceOutput
}
