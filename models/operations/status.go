// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/panoratech/go-sdk/models/components"
)

type Vertical string

const (
	VerticalTicketing           Vertical = "ticketing"
	VerticalMarketingautomation Vertical = "marketingautomation"
	VerticalCrm                 Vertical = "crm"
	VerticalFilestorage         Vertical = "filestorage"
	VerticalAccounting          Vertical = "accounting"
	VerticalEcommerce           Vertical = "ecommerce"
)

func (e Vertical) ToPointer() *Vertical {
	return &e
}
func (e *Vertical) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ticketing":
		fallthrough
	case "marketingautomation":
		fallthrough
	case "crm":
		fallthrough
	case "filestorage":
		fallthrough
	case "accounting":
		fallthrough
	case "ecommerce":
		*e = Vertical(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Vertical: %v", v)
	}
}

type StatusRequest struct {
	Vertical Vertical `pathParam:"style=simple,explode=false,name=vertical"`
}

func (o *StatusRequest) GetVertical() Vertical {
	if o == nil {
		return Vertical("")
	}
	return o.Vertical
}

type StatusResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *StatusResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
