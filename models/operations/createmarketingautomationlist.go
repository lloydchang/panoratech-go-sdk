// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/panoratech/go-sdk/models/components"
)

type CreateMarketingautomationListRequest struct {
	// The connection token
	XConnectionToken string `header:"style=simple,explode=false,name=x-connection-token"`
	// Set to true to include data from the original Marketingautomation software.
	RemoteData                          *bool                                          `queryParam:"style=form,explode=true,name=remote_data"`
	UnifiedMarketingautomationListInput components.UnifiedMarketingautomationListInput `request:"mediaType=application/json"`
}

func (o *CreateMarketingautomationListRequest) GetXConnectionToken() string {
	if o == nil {
		return ""
	}
	return o.XConnectionToken
}

func (o *CreateMarketingautomationListRequest) GetRemoteData() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *CreateMarketingautomationListRequest) GetUnifiedMarketingautomationListInput() components.UnifiedMarketingautomationListInput {
	if o == nil {
		return components.UnifiedMarketingautomationListInput{}
	}
	return o.UnifiedMarketingautomationListInput
}

type CreateMarketingautomationListResponse struct {
	HTTPMeta                             components.HTTPMetadata `json:"-"`
	UnifiedMarketingautomationListOutput *components.UnifiedMarketingautomationListOutput
}

func (o *CreateMarketingautomationListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateMarketingautomationListResponse) GetUnifiedMarketingautomationListOutput() *components.UnifiedMarketingautomationListOutput {
	if o == nil {
		return nil
	}
	return o.UnifiedMarketingautomationListOutput
}
