// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

// UnifiedHrisEmploymentOutputFieldMappings - The custom field mappings of the object between the remote 3rd party & Panora
type UnifiedHrisEmploymentOutputFieldMappings struct {
}

// UnifiedHrisEmploymentOutputRemoteData - The remote data of the employment in the context of the 3rd Party
type UnifiedHrisEmploymentOutputRemoteData struct {
}

type UnifiedHrisEmploymentOutput struct {
	// The job title of the employment
	JobTitle *string `json:"job_title,omitempty"`
	// The pay rate of the employment
	PayRate *float64 `json:"pay_rate,omitempty"`
	// The pay period of the employment
	PayPeriod *string `json:"pay_period,omitempty"`
	// The pay frequency of the employment
	PayFrequency *string `json:"pay_frequency,omitempty"`
	// The currency of the pay
	PayCurrency *string `json:"pay_currency,omitempty"`
	// The FLSA status of the employment
	FlsaStatus *string `json:"flsa_status,omitempty"`
	// The effective date of the employment
	EffectiveDate *time.Time `json:"effective_date,omitempty"`
	// The type of employment
	EmploymentType *string `json:"employment_type,omitempty"`
	// The UUID of the associated pay group
	PayGroupID *string `json:"pay_group_id,omitempty"`
	// The UUID of the associated employee
	EmployeeID *string `json:"employee_id,omitempty"`
	// The custom field mappings of the object between the remote 3rd party & Panora
	FieldMappings *UnifiedHrisEmploymentOutputFieldMappings `json:"field_mappings,omitempty"`
	// The UUID of the employment record
	ID *string `json:"id,omitempty"`
	// The remote ID of the employment in the context of the 3rd Party
	RemoteID *string `json:"remote_id,omitempty"`
	// The remote data of the employment in the context of the 3rd Party
	RemoteData *UnifiedHrisEmploymentOutputRemoteData `json:"remote_data,omitempty"`
	// The date when the employment was created in the 3rd party system
	RemoteCreatedAt *time.Time `json:"remote_created_at,omitempty"`
	// The created date of the employment record
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The last modified date of the employment record
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	// Indicates if the employment was deleted in the remote system
	RemoteWasDeleted *bool `json:"remote_was_deleted,omitempty"`
}

func (u UnifiedHrisEmploymentOutput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UnifiedHrisEmploymentOutput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UnifiedHrisEmploymentOutput) GetJobTitle() *string {
	if o == nil {
		return nil
	}
	return o.JobTitle
}

func (o *UnifiedHrisEmploymentOutput) GetPayRate() *float64 {
	if o == nil {
		return nil
	}
	return o.PayRate
}

func (o *UnifiedHrisEmploymentOutput) GetPayPeriod() *string {
	if o == nil {
		return nil
	}
	return o.PayPeriod
}

func (o *UnifiedHrisEmploymentOutput) GetPayFrequency() *string {
	if o == nil {
		return nil
	}
	return o.PayFrequency
}

func (o *UnifiedHrisEmploymentOutput) GetPayCurrency() *string {
	if o == nil {
		return nil
	}
	return o.PayCurrency
}

func (o *UnifiedHrisEmploymentOutput) GetFlsaStatus() *string {
	if o == nil {
		return nil
	}
	return o.FlsaStatus
}

func (o *UnifiedHrisEmploymentOutput) GetEffectiveDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.EffectiveDate
}

func (o *UnifiedHrisEmploymentOutput) GetEmploymentType() *string {
	if o == nil {
		return nil
	}
	return o.EmploymentType
}

func (o *UnifiedHrisEmploymentOutput) GetPayGroupID() *string {
	if o == nil {
		return nil
	}
	return o.PayGroupID
}

func (o *UnifiedHrisEmploymentOutput) GetEmployeeID() *string {
	if o == nil {
		return nil
	}
	return o.EmployeeID
}

func (o *UnifiedHrisEmploymentOutput) GetFieldMappings() *UnifiedHrisEmploymentOutputFieldMappings {
	if o == nil {
		return nil
	}
	return o.FieldMappings
}

func (o *UnifiedHrisEmploymentOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedHrisEmploymentOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedHrisEmploymentOutput) GetRemoteData() *UnifiedHrisEmploymentOutputRemoteData {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *UnifiedHrisEmploymentOutput) GetRemoteCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RemoteCreatedAt
}

func (o *UnifiedHrisEmploymentOutput) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *UnifiedHrisEmploymentOutput) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *UnifiedHrisEmploymentOutput) GetRemoteWasDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteWasDeleted
}
