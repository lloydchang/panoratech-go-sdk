// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// AddressType - The address type. Authorized values are either PERSONAL or WORK.
type AddressType string

const (
	AddressTypePersonal AddressType = "PERSONAL"
	AddressTypeWork     AddressType = "WORK"
)

func (e AddressType) ToPointer() *AddressType {
	return &e
}
func (e *AddressType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PERSONAL":
		fallthrough
	case "WORK":
		*e = AddressType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddressType: %v", v)
	}
}

type Address struct {
	// The street
	Street1 *string `json:"street_1"`
	// More information about the street
	Street2 *string `json:"street_2"`
	// The city
	City *string `json:"city"`
	// The state
	State *string `json:"state"`
	// The postal code
	PostalCode *string `json:"postal_code"`
	// The country
	Country *string `json:"country"`
	// The address type. Authorized values are either PERSONAL or WORK.
	AddressType *AddressType `json:"address_type"`
	// The owner type of the address
	OwnerType *string `json:"owner_type"`
}

func (o *Address) GetStreet1() *string {
	if o == nil {
		return nil
	}
	return o.Street1
}

func (o *Address) GetStreet2() *string {
	if o == nil {
		return nil
	}
	return o.Street2
}

func (o *Address) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *Address) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *Address) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *Address) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *Address) GetAddressType() *AddressType {
	if o == nil {
		return nil
	}
	return o.AddressType
}

func (o *Address) GetOwnerType() *string {
	if o == nil {
		return nil
	}
	return o.OwnerType
}
