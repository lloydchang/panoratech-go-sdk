// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

// UnifiedHrisLocationOutputFieldMappings - The custom field mappings of the object between the remote 3rd party & Panora
type UnifiedHrisLocationOutputFieldMappings struct {
}

// UnifiedHrisLocationOutputRemoteData - The remote data of the location in the context of the 3rd Party
type UnifiedHrisLocationOutputRemoteData struct {
}

type UnifiedHrisLocationOutput struct {
	// The name of the location
	Name *string `json:"name,omitempty"`
	// The phone number of the location
	PhoneNumber *string `json:"phone_number,omitempty"`
	// The first line of the street address
	Street1 *string `json:"street_1,omitempty"`
	// The second line of the street address
	Street2 *string `json:"street_2,omitempty"`
	// The city of the location
	City *string `json:"city,omitempty"`
	// The state or region of the location
	State *string `json:"state,omitempty"`
	// The zip or postal code of the location
	ZipCode *string `json:"zip_code,omitempty"`
	// The country of the location
	Country *string `json:"country,omitempty"`
	// The type of the location
	LocationType *string `json:"location_type,omitempty"`
	// The UUID of the company associated with the location
	CompanyID *string `json:"company_id,omitempty"`
	// The UUID of the employee associated with the location
	EmployeeID *string `json:"employee_id,omitempty"`
	// The custom field mappings of the object between the remote 3rd party & Panora
	FieldMappings *UnifiedHrisLocationOutputFieldMappings `json:"field_mappings,omitempty"`
	// The UUID of the location record
	ID *string `json:"id,omitempty"`
	// The remote ID of the location in the context of the 3rd Party
	RemoteID *string `json:"remote_id,omitempty"`
	// The remote data of the location in the context of the 3rd Party
	RemoteData *UnifiedHrisLocationOutputRemoteData `json:"remote_data,omitempty"`
	// The date when the location was created in the 3rd party system
	RemoteCreatedAt *time.Time `json:"remote_created_at,omitempty"`
	// The created date of the location record
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The last modified date of the location record
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	// Indicates if the location was deleted in the remote system
	RemoteWasDeleted *bool `json:"remote_was_deleted,omitempty"`
}

func (u UnifiedHrisLocationOutput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UnifiedHrisLocationOutput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UnifiedHrisLocationOutput) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UnifiedHrisLocationOutput) GetPhoneNumber() *string {
	if o == nil {
		return nil
	}
	return o.PhoneNumber
}

func (o *UnifiedHrisLocationOutput) GetStreet1() *string {
	if o == nil {
		return nil
	}
	return o.Street1
}

func (o *UnifiedHrisLocationOutput) GetStreet2() *string {
	if o == nil {
		return nil
	}
	return o.Street2
}

func (o *UnifiedHrisLocationOutput) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *UnifiedHrisLocationOutput) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *UnifiedHrisLocationOutput) GetZipCode() *string {
	if o == nil {
		return nil
	}
	return o.ZipCode
}

func (o *UnifiedHrisLocationOutput) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *UnifiedHrisLocationOutput) GetLocationType() *string {
	if o == nil {
		return nil
	}
	return o.LocationType
}

func (o *UnifiedHrisLocationOutput) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *UnifiedHrisLocationOutput) GetEmployeeID() *string {
	if o == nil {
		return nil
	}
	return o.EmployeeID
}

func (o *UnifiedHrisLocationOutput) GetFieldMappings() *UnifiedHrisLocationOutputFieldMappings {
	if o == nil {
		return nil
	}
	return o.FieldMappings
}

func (o *UnifiedHrisLocationOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedHrisLocationOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedHrisLocationOutput) GetRemoteData() *UnifiedHrisLocationOutputRemoteData {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *UnifiedHrisLocationOutput) GetRemoteCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RemoteCreatedAt
}

func (o *UnifiedHrisLocationOutput) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *UnifiedHrisLocationOutput) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *UnifiedHrisLocationOutput) GetRemoteWasDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteWasDeleted
}
