// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// UnifiedEcommerceOrderOutputFieldMappings - The custom field mappings of the object between the remote 3rd party & Panora
type UnifiedEcommerceOrderOutputFieldMappings struct {
}

// UnifiedEcommerceOrderOutputRemoteData - The remote data of the customer in the context of the 3rd Party
type UnifiedEcommerceOrderOutputRemoteData struct {
}

type UnifiedEcommerceOrderOutput struct {
	// The status of the order
	OrderStatus *string `json:"order_status,omitempty"`
	// The number of the order
	OrderNumber *string `json:"order_number,omitempty"`
	// The payment status of the order
	PaymentStatus *string `json:"payment_status,omitempty"`
	// The currency of the order. Authorized value must be of type CurrencyCode (ISO 4217)
	Currency *string `json:"currency,omitempty"`
	// The total price of the order
	TotalPrice *float64 `json:"total_price,omitempty"`
	// The total discount on the order
	TotalDiscount *float64 `json:"total_discount,omitempty"`
	// The total shipping cost of the order
	TotalShipping *float64 `json:"total_shipping,omitempty"`
	// The total tax on the order
	TotalTax *float64 `json:"total_tax,omitempty"`
	// The fulfillment status of the order
	FulfillmentStatus *string `json:"fulfillment_status,omitempty"`
	// The UUID of the customer associated with the order
	CustomerID *string `json:"customer_id,omitempty"`
	// The items in the order
	Items []LineItem `json:"items,omitempty"`
	// The custom field mappings of the object between the remote 3rd party & Panora
	FieldMappings *UnifiedEcommerceOrderOutputFieldMappings `json:"field_mappings,omitempty"`
	// The UUID of the order
	ID *string `json:"id,omitempty"`
	// The remote ID of the order in the context of the 3rd Party
	RemoteID *string `json:"remote_id,omitempty"`
	// The remote data of the customer in the context of the 3rd Party
	RemoteData *UnifiedEcommerceOrderOutputRemoteData `json:"remote_data,omitempty"`
	// The created date of the object
	CreatedAt *string `json:"created_at,omitempty"`
	// The modified date of the object
	ModifiedAt *string `json:"modified_at,omitempty"`
}

func (o *UnifiedEcommerceOrderOutput) GetOrderStatus() *string {
	if o == nil {
		return nil
	}
	return o.OrderStatus
}

func (o *UnifiedEcommerceOrderOutput) GetOrderNumber() *string {
	if o == nil {
		return nil
	}
	return o.OrderNumber
}

func (o *UnifiedEcommerceOrderOutput) GetPaymentStatus() *string {
	if o == nil {
		return nil
	}
	return o.PaymentStatus
}

func (o *UnifiedEcommerceOrderOutput) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *UnifiedEcommerceOrderOutput) GetTotalPrice() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalPrice
}

func (o *UnifiedEcommerceOrderOutput) GetTotalDiscount() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalDiscount
}

func (o *UnifiedEcommerceOrderOutput) GetTotalShipping() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalShipping
}

func (o *UnifiedEcommerceOrderOutput) GetTotalTax() *float64 {
	if o == nil {
		return nil
	}
	return o.TotalTax
}

func (o *UnifiedEcommerceOrderOutput) GetFulfillmentStatus() *string {
	if o == nil {
		return nil
	}
	return o.FulfillmentStatus
}

func (o *UnifiedEcommerceOrderOutput) GetCustomerID() *string {
	if o == nil {
		return nil
	}
	return o.CustomerID
}

func (o *UnifiedEcommerceOrderOutput) GetItems() []LineItem {
	if o == nil {
		return nil
	}
	return o.Items
}

func (o *UnifiedEcommerceOrderOutput) GetFieldMappings() *UnifiedEcommerceOrderOutputFieldMappings {
	if o == nil {
		return nil
	}
	return o.FieldMappings
}

func (o *UnifiedEcommerceOrderOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedEcommerceOrderOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedEcommerceOrderOutput) GetRemoteData() *UnifiedEcommerceOrderOutputRemoteData {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *UnifiedEcommerceOrderOutput) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *UnifiedEcommerceOrderOutput) GetModifiedAt() *string {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}
