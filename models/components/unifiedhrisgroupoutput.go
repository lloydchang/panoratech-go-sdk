// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

// UnifiedHrisGroupOutputFieldMappings - The custom field mappings of the object between the remote 3rd party & Panora
type UnifiedHrisGroupOutputFieldMappings struct {
}

// UnifiedHrisGroupOutputRemoteData - The remote data of the group in the context of the 3rd Party
type UnifiedHrisGroupOutputRemoteData struct {
}

type UnifiedHrisGroupOutput struct {
	// The UUID of the parent group
	ParentGroup *string `json:"parent_group,omitempty"`
	// The name of the group
	Name *string `json:"name,omitempty"`
	// The type of the group
	Type *string `json:"type,omitempty"`
	// The custom field mappings of the object between the remote 3rd party & Panora
	FieldMappings *UnifiedHrisGroupOutputFieldMappings `json:"field_mappings,omitempty"`
	// The UUID of the group record
	ID *string `json:"id,omitempty"`
	// The remote ID of the group in the context of the 3rd Party
	RemoteID *string `json:"remote_id,omitempty"`
	// The remote data of the group in the context of the 3rd Party
	RemoteData *UnifiedHrisGroupOutputRemoteData `json:"remote_data,omitempty"`
	// The date when the group was created in the 3rd party system
	RemoteCreatedAt *time.Time `json:"remote_created_at,omitempty"`
	// The created date of the group record
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The last modified date of the group record
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	// Indicates if the group was deleted in the remote system
	RemoteWasDeleted *bool `json:"remote_was_deleted,omitempty"`
}

func (u UnifiedHrisGroupOutput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UnifiedHrisGroupOutput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UnifiedHrisGroupOutput) GetParentGroup() *string {
	if o == nil {
		return nil
	}
	return o.ParentGroup
}

func (o *UnifiedHrisGroupOutput) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UnifiedHrisGroupOutput) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *UnifiedHrisGroupOutput) GetFieldMappings() *UnifiedHrisGroupOutputFieldMappings {
	if o == nil {
		return nil
	}
	return o.FieldMappings
}

func (o *UnifiedHrisGroupOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedHrisGroupOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedHrisGroupOutput) GetRemoteData() *UnifiedHrisGroupOutputRemoteData {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *UnifiedHrisGroupOutput) GetRemoteCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RemoteCreatedAt
}

func (o *UnifiedHrisGroupOutput) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *UnifiedHrisGroupOutput) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *UnifiedHrisGroupOutput) GetRemoteWasDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteWasDeleted
}
