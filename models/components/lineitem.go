// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

type LineItem struct {
	// The name of the report item
	Name *string `json:"name,omitempty"`
	// The value of the report item
	Value *float64 `json:"value,omitempty"`
	// The type of the report item
	Type *string `json:"type,omitempty"`
	// The UUID of the parent item
	ParentItem *string `json:"parent_item,omitempty"`
	// The remote ID of the report item
	RemoteID *string `json:"remote_id,omitempty"`
	// The date when the report item was generated in the remote system
	RemoteGeneratedAt *time.Time `json:"remote_generated_at,omitempty"`
	// The UUID of the associated company info object
	CompanyInfoID *string `json:"company_info_id,omitempty"`
	// The created date of the report item
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The last modified date of the report item
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
}

func (l LineItem) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *LineItem) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *LineItem) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *LineItem) GetValue() *float64 {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *LineItem) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *LineItem) GetParentItem() *string {
	if o == nil {
		return nil
	}
	return o.ParentItem
}

func (o *LineItem) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *LineItem) GetRemoteGeneratedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RemoteGeneratedAt
}

func (o *LineItem) GetCompanyInfoID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyInfoID
}

func (o *LineItem) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *LineItem) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}
