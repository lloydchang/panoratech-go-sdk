// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

type UnifiedAtsApplicationOutput struct {
	// The application date
	AppliedAt *time.Time `json:"applied_at,omitempty"`
	// The rejection date
	RejectedAt *time.Time `json:"rejected_at,omitempty"`
	// The offers UUIDs for the application
	Offers []string `json:"offers,omitempty"`
	// The source of the application
	Source *string `json:"source,omitempty"`
	// The UUID of the person credited for the application
	CreditedTo *string `json:"credited_to,omitempty"`
	// The UUID of the current stage of the application
	CurrentStage *string `json:"current_stage,omitempty"`
	// The rejection reason for the application
	RejectReason *string `json:"reject_reason,omitempty"`
	// The UUID of the candidate
	CandidateID *string `json:"candidate_id,omitempty"`
	// The UUID of the job
	JobID *string `json:"job_id,omitempty"`
	// The custom field mappings of the object between the remote 3rd party & Panora
	FieldMappings map[string]any `json:"field_mappings,omitempty"`
	// The UUID of the application
	ID *string `json:"id,omitempty"`
	// The remote ID of the application in the context of the 3rd Party
	RemoteID *string `json:"remote_id,omitempty"`
	// The remote data of the application in the context of the 3rd Party
	RemoteData map[string]any `json:"remote_data,omitempty"`
	// The created date of the object
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The modified date of the object
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	// The remote created date of the object
	RemoteCreatedAt *time.Time `json:"remote_created_at,omitempty"`
	// The remote modified date of the object
	RemoteModifiedAt *time.Time `json:"remote_modified_at,omitempty"`
}

func (u UnifiedAtsApplicationOutput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UnifiedAtsApplicationOutput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UnifiedAtsApplicationOutput) GetAppliedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.AppliedAt
}

func (o *UnifiedAtsApplicationOutput) GetRejectedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RejectedAt
}

func (o *UnifiedAtsApplicationOutput) GetOffers() []string {
	if o == nil {
		return nil
	}
	return o.Offers
}

func (o *UnifiedAtsApplicationOutput) GetSource() *string {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *UnifiedAtsApplicationOutput) GetCreditedTo() *string {
	if o == nil {
		return nil
	}
	return o.CreditedTo
}

func (o *UnifiedAtsApplicationOutput) GetCurrentStage() *string {
	if o == nil {
		return nil
	}
	return o.CurrentStage
}

func (o *UnifiedAtsApplicationOutput) GetRejectReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectReason
}

func (o *UnifiedAtsApplicationOutput) GetCandidateID() *string {
	if o == nil {
		return nil
	}
	return o.CandidateID
}

func (o *UnifiedAtsApplicationOutput) GetJobID() *string {
	if o == nil {
		return nil
	}
	return o.JobID
}

func (o *UnifiedAtsApplicationOutput) GetFieldMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.FieldMappings
}

func (o *UnifiedAtsApplicationOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedAtsApplicationOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedAtsApplicationOutput) GetRemoteData() map[string]any {
	if o == nil {
		return nil
	}
	return o.RemoteData
}

func (o *UnifiedAtsApplicationOutput) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *UnifiedAtsApplicationOutput) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *UnifiedAtsApplicationOutput) GetRemoteCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RemoteCreatedAt
}

func (o *UnifiedAtsApplicationOutput) GetRemoteModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RemoteModifiedAt
}
