// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type UnifiedTicketingCommentOutputRemoteData struct {
}

type UnifiedTicketingCommentOutputCreatedAt struct {
}

type UnifiedTicketingCommentOutputModifiedAt struct {
}

type UnifiedTicketingCommentOutput struct {
	// The body of the comment
	Body string `json:"body"`
	// The html body of the comment
	HTMLBody *string `json:"html_body,omitempty"`
	// The public status of the comment
	IsPrivate *bool `json:"is_private,omitempty"`
	// The creator type of the comment. Authorized values are either USER or CONTACT
	CreatorType *string `json:"creator_type,omitempty"`
	// The UUID of the ticket the comment is tied to
	TicketID *string `json:"ticket_id,omitempty"`
	// The UUID of the contact which the comment belongs to (if no user_id specified)
	ContactID *string `json:"contact_id,omitempty"`
	// The UUID of the user which the comment belongs to (if no contact_id specified)
	UserID *string `json:"user_id,omitempty"`
	// The attachements UUIDs tied to the comment
	Attachments []string `json:"attachments,omitempty"`
	// The UUID of the comment
	ID *string `json:"id,omitempty"`
	// The id of the comment in the context of the 3rd Party
	RemoteID   *string                                 `json:"remote_id,omitempty"`
	RemoteData UnifiedTicketingCommentOutputRemoteData `json:"remote_data"`
	CreatedAt  UnifiedTicketingCommentOutputCreatedAt  `json:"created_at"`
	ModifiedAt UnifiedTicketingCommentOutputModifiedAt `json:"modified_at"`
}

func (o *UnifiedTicketingCommentOutput) GetBody() string {
	if o == nil {
		return ""
	}
	return o.Body
}

func (o *UnifiedTicketingCommentOutput) GetHTMLBody() *string {
	if o == nil {
		return nil
	}
	return o.HTMLBody
}

func (o *UnifiedTicketingCommentOutput) GetIsPrivate() *bool {
	if o == nil {
		return nil
	}
	return o.IsPrivate
}

func (o *UnifiedTicketingCommentOutput) GetCreatorType() *string {
	if o == nil {
		return nil
	}
	return o.CreatorType
}

func (o *UnifiedTicketingCommentOutput) GetTicketID() *string {
	if o == nil {
		return nil
	}
	return o.TicketID
}

func (o *UnifiedTicketingCommentOutput) GetContactID() *string {
	if o == nil {
		return nil
	}
	return o.ContactID
}

func (o *UnifiedTicketingCommentOutput) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *UnifiedTicketingCommentOutput) GetAttachments() []string {
	if o == nil {
		return nil
	}
	return o.Attachments
}

func (o *UnifiedTicketingCommentOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedTicketingCommentOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedTicketingCommentOutput) GetRemoteData() UnifiedTicketingCommentOutputRemoteData {
	if o == nil {
		return UnifiedTicketingCommentOutputRemoteData{}
	}
	return o.RemoteData
}

func (o *UnifiedTicketingCommentOutput) GetCreatedAt() UnifiedTicketingCommentOutputCreatedAt {
	if o == nil {
		return UnifiedTicketingCommentOutputCreatedAt{}
	}
	return o.CreatedAt
}

func (o *UnifiedTicketingCommentOutput) GetModifiedAt() UnifiedTicketingCommentOutputModifiedAt {
	if o == nil {
		return UnifiedTicketingCommentOutputModifiedAt{}
	}
	return o.ModifiedAt
}
