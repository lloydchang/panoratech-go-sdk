// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

type UnifiedCrmTaskOutputFieldMappings struct {
}

type UnifiedCrmTaskOutputRemoteData struct {
}

type UnifiedCrmTaskOutputCreatedAt struct {
}

type UnifiedCrmTaskOutputModifiedAt struct {
}

type UnifiedCrmTaskOutput struct {
	// The subject of the task
	Subject string `json:"subject"`
	// The content of the task
	Content string `json:"content"`
	// The status of the task. Authorized values are PENDING, COMPLETED.
	Status string `json:"status"`
	// The due date of the task
	DueDate *time.Time `json:"due_date,omitempty"`
	// The finished date of the task
	FinishedDate *time.Time `json:"finished_date,omitempty"`
	// The UUID of the user tied to the task
	UserID *string `json:"user_id,omitempty"`
	// The UUID fo the company tied to the task
	CompanyID *string `json:"company_id,omitempty"`
	// The UUID of the deal tied to the task
	DealID        *string                           `json:"deal_id,omitempty"`
	FieldMappings UnifiedCrmTaskOutputFieldMappings `json:"field_mappings"`
	// The UUID of the task
	ID *string `json:"id,omitempty"`
	// The id of the task in the context of the Crm 3rd Party
	RemoteID   *string                        `json:"remote_id,omitempty"`
	RemoteData UnifiedCrmTaskOutputRemoteData `json:"remote_data"`
	CreatedAt  UnifiedCrmTaskOutputCreatedAt  `json:"created_at"`
	ModifiedAt UnifiedCrmTaskOutputModifiedAt `json:"modified_at"`
}

func (u UnifiedCrmTaskOutput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UnifiedCrmTaskOutput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UnifiedCrmTaskOutput) GetSubject() string {
	if o == nil {
		return ""
	}
	return o.Subject
}

func (o *UnifiedCrmTaskOutput) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

func (o *UnifiedCrmTaskOutput) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *UnifiedCrmTaskOutput) GetDueDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.DueDate
}

func (o *UnifiedCrmTaskOutput) GetFinishedDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.FinishedDate
}

func (o *UnifiedCrmTaskOutput) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *UnifiedCrmTaskOutput) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *UnifiedCrmTaskOutput) GetDealID() *string {
	if o == nil {
		return nil
	}
	return o.DealID
}

func (o *UnifiedCrmTaskOutput) GetFieldMappings() UnifiedCrmTaskOutputFieldMappings {
	if o == nil {
		return UnifiedCrmTaskOutputFieldMappings{}
	}
	return o.FieldMappings
}

func (o *UnifiedCrmTaskOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedCrmTaskOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedCrmTaskOutput) GetRemoteData() UnifiedCrmTaskOutputRemoteData {
	if o == nil {
		return UnifiedCrmTaskOutputRemoteData{}
	}
	return o.RemoteData
}

func (o *UnifiedCrmTaskOutput) GetCreatedAt() UnifiedCrmTaskOutputCreatedAt {
	if o == nil {
		return UnifiedCrmTaskOutputCreatedAt{}
	}
	return o.CreatedAt
}

func (o *UnifiedCrmTaskOutput) GetModifiedAt() UnifiedCrmTaskOutputModifiedAt {
	if o == nil {
		return UnifiedCrmTaskOutputModifiedAt{}
	}
	return o.ModifiedAt
}
