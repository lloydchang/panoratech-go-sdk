// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

// UnifiedHrisTimesheetEntryInputFieldMappings - The custom field mappings of the object between the remote 3rd party & Panora
type UnifiedHrisTimesheetEntryInputFieldMappings struct {
}

type UnifiedHrisTimesheetEntryInput struct {
	// The number of hours worked
	HoursWorked *float64 `json:"hours_worked,omitempty"`
	// The start time of the timesheet entry
	StartTime *time.Time `json:"start_time,omitempty"`
	// The end time of the timesheet entry
	EndTime *time.Time `json:"end_time,omitempty"`
	// The UUID of the associated employee
	EmployeeID *string `json:"employee_id,omitempty"`
	// Indicates if the timesheet entry was deleted in the remote system
	RemoteWasDeleted *bool `json:"remote_was_deleted,omitempty"`
	// The custom field mappings of the object between the remote 3rd party & Panora
	FieldMappings *UnifiedHrisTimesheetEntryInputFieldMappings `json:"field_mappings,omitempty"`
}

func (u UnifiedHrisTimesheetEntryInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UnifiedHrisTimesheetEntryInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UnifiedHrisTimesheetEntryInput) GetHoursWorked() *float64 {
	if o == nil {
		return nil
	}
	return o.HoursWorked
}

func (o *UnifiedHrisTimesheetEntryInput) GetStartTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartTime
}

func (o *UnifiedHrisTimesheetEntryInput) GetEndTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndTime
}

func (o *UnifiedHrisTimesheetEntryInput) GetEmployeeID() *string {
	if o == nil {
		return nil
	}
	return o.EmployeeID
}

func (o *UnifiedHrisTimesheetEntryInput) GetRemoteWasDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.RemoteWasDeleted
}

func (o *UnifiedHrisTimesheetEntryInput) GetFieldMappings() *UnifiedHrisTimesheetEntryInputFieldMappings {
	if o == nil {
		return nil
	}
	return o.FieldMappings
}
