// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

// UnifiedAtsInterviewInputStatus - The status of the interview
type UnifiedAtsInterviewInputStatus string

const (
	UnifiedAtsInterviewInputStatusScheduled        UnifiedAtsInterviewInputStatus = "SCHEDULED"
	UnifiedAtsInterviewInputStatusAwaitingFeedback UnifiedAtsInterviewInputStatus = "AWAITING_FEEDBACK"
	UnifiedAtsInterviewInputStatusCompleted        UnifiedAtsInterviewInputStatus = "COMPLETED"
)

func (e UnifiedAtsInterviewInputStatus) ToPointer() *UnifiedAtsInterviewInputStatus {
	return &e
}
func (e *UnifiedAtsInterviewInputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SCHEDULED":
		fallthrough
	case "AWAITING_FEEDBACK":
		fallthrough
	case "COMPLETED":
		*e = UnifiedAtsInterviewInputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnifiedAtsInterviewInputStatus: %v", v)
	}
}

type UnifiedAtsInterviewInput struct {
	// The status of the interview
	Status *UnifiedAtsInterviewInputStatus `json:"status,omitempty"`
	// The UUID of the application
	ApplicationID *string `json:"application_id,omitempty"`
	// The UUID of the job interview stage
	JobInterviewStageID *string `json:"job_interview_stage_id,omitempty"`
	// The UUID of the organizer
	OrganizedBy *string `json:"organized_by,omitempty"`
	// The UUIDs of the interviewers
	Interviewers []string `json:"interviewers,omitempty"`
	// The location of the interview
	Location *string `json:"location,omitempty"`
	// The start date and time of the interview
	StartAt *time.Time `json:"start_at,omitempty"`
	// The end date and time of the interview
	EndAt *time.Time `json:"end_at,omitempty"`
	// The remote creation date of the interview
	RemoteCreatedAt *time.Time `json:"remote_created_at,omitempty"`
	// The remote modification date of the interview
	RemoteUpdatedAt *time.Time `json:"remote_updated_at,omitempty"`
	// The custom field mappings of the object between the remote 3rd party & Panora
	FieldMappings map[string]any `json:"field_mappings,omitempty"`
}

func (u UnifiedAtsInterviewInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UnifiedAtsInterviewInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UnifiedAtsInterviewInput) GetStatus() *UnifiedAtsInterviewInputStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UnifiedAtsInterviewInput) GetApplicationID() *string {
	if o == nil {
		return nil
	}
	return o.ApplicationID
}

func (o *UnifiedAtsInterviewInput) GetJobInterviewStageID() *string {
	if o == nil {
		return nil
	}
	return o.JobInterviewStageID
}

func (o *UnifiedAtsInterviewInput) GetOrganizedBy() *string {
	if o == nil {
		return nil
	}
	return o.OrganizedBy
}

func (o *UnifiedAtsInterviewInput) GetInterviewers() []string {
	if o == nil {
		return nil
	}
	return o.Interviewers
}

func (o *UnifiedAtsInterviewInput) GetLocation() *string {
	if o == nil {
		return nil
	}
	return o.Location
}

func (o *UnifiedAtsInterviewInput) GetStartAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartAt
}

func (o *UnifiedAtsInterviewInput) GetEndAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndAt
}

func (o *UnifiedAtsInterviewInput) GetRemoteCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RemoteCreatedAt
}

func (o *UnifiedAtsInterviewInput) GetRemoteUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RemoteUpdatedAt
}

func (o *UnifiedAtsInterviewInput) GetFieldMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.FieldMappings
}
