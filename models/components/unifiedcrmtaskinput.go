// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// UnifiedCrmTaskInputStatus - The status of the task. Authorized values are PENDING, COMPLETED.
type UnifiedCrmTaskInputStatus string

const (
	UnifiedCrmTaskInputStatusPending   UnifiedCrmTaskInputStatus = "PENDING"
	UnifiedCrmTaskInputStatusCompleted UnifiedCrmTaskInputStatus = "COMPLETED"
)

func (e UnifiedCrmTaskInputStatus) ToPointer() *UnifiedCrmTaskInputStatus {
	return &e
}
func (e *UnifiedCrmTaskInputStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "COMPLETED":
		*e = UnifiedCrmTaskInputStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnifiedCrmTaskInputStatus: %v", v)
	}
}

type UnifiedCrmTaskInput struct {
	// The subject of the task
	Subject *string `json:"subject"`
	// The content of the task
	Content *string `json:"content"`
	// The status of the task. Authorized values are PENDING, COMPLETED.
	Status *UnifiedCrmTaskInputStatus `json:"status"`
	// The due date of the task
	DueDate *string `json:"due_date,omitempty"`
	// The finished date of the task
	FinishedDate *string `json:"finished_date,omitempty"`
	// The UUID of the user tied to the task
	UserID *string `json:"user_id,omitempty"`
	// The UUID of the company tied to the task
	CompanyID *string `json:"company_id,omitempty"`
	// The UUID of the deal tied to the task
	DealID *string `json:"deal_id,omitempty"`
	// The custom field mappings of the task between the remote 3rd party & Panora
	FieldMappings map[string]any `json:"field_mappings,omitempty"`
}

func (o *UnifiedCrmTaskInput) GetSubject() *string {
	if o == nil {
		return nil
	}
	return o.Subject
}

func (o *UnifiedCrmTaskInput) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *UnifiedCrmTaskInput) GetStatus() *UnifiedCrmTaskInputStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UnifiedCrmTaskInput) GetDueDate() *string {
	if o == nil {
		return nil
	}
	return o.DueDate
}

func (o *UnifiedCrmTaskInput) GetFinishedDate() *string {
	if o == nil {
		return nil
	}
	return o.FinishedDate
}

func (o *UnifiedCrmTaskInput) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *UnifiedCrmTaskInput) GetCompanyID() *string {
	if o == nil {
		return nil
	}
	return o.CompanyID
}

func (o *UnifiedCrmTaskInput) GetDealID() *string {
	if o == nil {
		return nil
	}
	return o.DealID
}

func (o *UnifiedCrmTaskInput) GetFieldMappings() map[string]any {
	if o == nil {
		return nil
	}
	return o.FieldMappings
}
