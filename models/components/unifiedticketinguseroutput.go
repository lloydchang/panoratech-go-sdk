// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type UnifiedTicketingUserOutputFieldMappings struct {
}

type UnifiedTicketingUserOutputRemoteData struct {
}

type UnifiedTicketingUserOutputCreatedAt struct {
}

type UnifiedTicketingUserOutputModifiedAt struct {
}

type UnifiedTicketingUserOutput struct {
	// The name of the user
	Name string `json:"name"`
	// The email address of the user
	EmailAddress string `json:"email_address"`
	// The teams whose the user is part of
	Teams []string `json:"teams,omitempty"`
	// The account or organization the user is part of
	AccountID     *string                                 `json:"account_id,omitempty"`
	FieldMappings UnifiedTicketingUserOutputFieldMappings `json:"field_mappings"`
	// The UUID of the user
	ID *string `json:"id,omitempty"`
	// The id of the user in the context of the 3rd Party
	RemoteID   *string                              `json:"remote_id,omitempty"`
	RemoteData UnifiedTicketingUserOutputRemoteData `json:"remote_data"`
	CreatedAt  UnifiedTicketingUserOutputCreatedAt  `json:"created_at"`
	ModifiedAt UnifiedTicketingUserOutputModifiedAt `json:"modified_at"`
}

func (o *UnifiedTicketingUserOutput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *UnifiedTicketingUserOutput) GetEmailAddress() string {
	if o == nil {
		return ""
	}
	return o.EmailAddress
}

func (o *UnifiedTicketingUserOutput) GetTeams() []string {
	if o == nil {
		return nil
	}
	return o.Teams
}

func (o *UnifiedTicketingUserOutput) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *UnifiedTicketingUserOutput) GetFieldMappings() UnifiedTicketingUserOutputFieldMappings {
	if o == nil {
		return UnifiedTicketingUserOutputFieldMappings{}
	}
	return o.FieldMappings
}

func (o *UnifiedTicketingUserOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedTicketingUserOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedTicketingUserOutput) GetRemoteData() UnifiedTicketingUserOutputRemoteData {
	if o == nil {
		return UnifiedTicketingUserOutputRemoteData{}
	}
	return o.RemoteData
}

func (o *UnifiedTicketingUserOutput) GetCreatedAt() UnifiedTicketingUserOutputCreatedAt {
	if o == nil {
		return UnifiedTicketingUserOutputCreatedAt{}
	}
	return o.CreatedAt
}

func (o *UnifiedTicketingUserOutput) GetModifiedAt() UnifiedTicketingUserOutputModifiedAt {
	if o == nil {
		return UnifiedTicketingUserOutputModifiedAt{}
	}
	return o.ModifiedAt
}
