// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/panoratech/go-sdk/internal/utils"
	"time"
)

type FieldMappings struct {
}

type RemoteData struct {
}

type CreatedAt struct {
}

type ModifiedAt struct {
}

type UnifiedTicketingTicketOutput struct {
	// The name of the ticket
	Name string `json:"name"`
	// The status of the ticket. Authorized values are OPEN or CLOSED.
	Status *string `json:"status,omitempty"`
	// The description of the ticket
	Description string `json:"description"`
	// The date the ticket is due
	DueDate *time.Time `json:"due_date,omitempty"`
	// The type of the ticket. Authorized values are PROBLEM, QUESTION, or TASK
	Type *string `json:"type,omitempty"`
	// The UUID of the parent ticket
	ParentTicket *string `json:"parent_ticket,omitempty"`
	// The collection UUIDs the ticket belongs to
	Collections *string `json:"collections,omitempty"`
	// The tags names of the ticket
	Tags []string `json:"tags,omitempty"`
	// The date the ticket has been completed
	CompletedAt *time.Time `json:"completed_at,omitempty"`
	// The priority of the ticket. Authorized values are HIGH, MEDIUM or LOW.
	Priority *string `json:"priority,omitempty"`
	// The users UUIDs the ticket is assigned to
	AssignedTo []string `json:"assigned_to,omitempty"`
	// The comment of the ticket
	Comment *UnifiedTicketingCommentInput `json:"comment,omitempty"`
	// The UUID of the account which the ticket belongs to
	AccountID *string `json:"account_id,omitempty"`
	// The UUID of the contact which the ticket belongs to
	ContactID *string `json:"contact_id,omitempty"`
	// The attachements UUIDs tied to the ticket
	Attachments   []string      `json:"attachments,omitempty"`
	FieldMappings FieldMappings `json:"field_mappings"`
	// The UUID of the ticket
	ID *string `json:"id,omitempty"`
	// The id of the ticket in the context of the 3rd Party
	RemoteID   *string    `json:"remote_id,omitempty"`
	RemoteData RemoteData `json:"remote_data"`
	CreatedAt  CreatedAt  `json:"created_at"`
	ModifiedAt ModifiedAt `json:"modified_at"`
}

func (u UnifiedTicketingTicketOutput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UnifiedTicketingTicketOutput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UnifiedTicketingTicketOutput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *UnifiedTicketingTicketOutput) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UnifiedTicketingTicketOutput) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *UnifiedTicketingTicketOutput) GetDueDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.DueDate
}

func (o *UnifiedTicketingTicketOutput) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *UnifiedTicketingTicketOutput) GetParentTicket() *string {
	if o == nil {
		return nil
	}
	return o.ParentTicket
}

func (o *UnifiedTicketingTicketOutput) GetCollections() *string {
	if o == nil {
		return nil
	}
	return o.Collections
}

func (o *UnifiedTicketingTicketOutput) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *UnifiedTicketingTicketOutput) GetCompletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CompletedAt
}

func (o *UnifiedTicketingTicketOutput) GetPriority() *string {
	if o == nil {
		return nil
	}
	return o.Priority
}

func (o *UnifiedTicketingTicketOutput) GetAssignedTo() []string {
	if o == nil {
		return nil
	}
	return o.AssignedTo
}

func (o *UnifiedTicketingTicketOutput) GetComment() *UnifiedTicketingCommentInput {
	if o == nil {
		return nil
	}
	return o.Comment
}

func (o *UnifiedTicketingTicketOutput) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *UnifiedTicketingTicketOutput) GetContactID() *string {
	if o == nil {
		return nil
	}
	return o.ContactID
}

func (o *UnifiedTicketingTicketOutput) GetAttachments() []string {
	if o == nil {
		return nil
	}
	return o.Attachments
}

func (o *UnifiedTicketingTicketOutput) GetFieldMappings() FieldMappings {
	if o == nil {
		return FieldMappings{}
	}
	return o.FieldMappings
}

func (o *UnifiedTicketingTicketOutput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UnifiedTicketingTicketOutput) GetRemoteID() *string {
	if o == nil {
		return nil
	}
	return o.RemoteID
}

func (o *UnifiedTicketingTicketOutput) GetRemoteData() RemoteData {
	if o == nil {
		return RemoteData{}
	}
	return o.RemoteData
}

func (o *UnifiedTicketingTicketOutput) GetCreatedAt() CreatedAt {
	if o == nil {
		return CreatedAt{}
	}
	return o.CreatedAt
}

func (o *UnifiedTicketingTicketOutput) GetModifiedAt() ModifiedAt {
	if o == nil {
		return ModifiedAt{}
	}
	return o.ModifiedAt
}
